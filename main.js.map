{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common.service.ts","./src/app/test/test.component.ts","./src/app/test/test.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\nimport { Component } from '@angular/core';\nimport {CommonService} from './common.service';\nimport { NgForm } from '@angular/forms';\nimport { FormControl, FormGroup, Validators} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  allUser: Object;\n  isEdit=false;\n  title = 'FormValidation';   \n  isValidFormSubmitted = false;  \n  userObj={\n    name:'',\n    mobile:'',\n    email:'',\n    password:'',\n    introduction:'',\n    id:''\n  };\n  constructor(private commonService:CommonService){}\n  ngOnInit(){\n    this.getLatestUser();\n  }\n  addUser(formObj){\n    console.log(formObj)\n    this.commonService.createUser(formObj).subscribe((response)=>{\n      this.getLatestUser();\n\n    })\n    location.reload();\n  }\n  getLatestUser(){\n    this.commonService.getAllUser().subscribe((response)=>{\n      this.allUser = response\n    })\n  }\n  editUser(user){\n    this.isEdit=true;\n    this.userObj = user;\n  }\n\n  deleteUser(user){\n    this.commonService.deleteUser(user).subscribe(()=>{\n      this.getLatestUser();\n    })\n    location.reload();\n  }\n  updateUser(){\n    this.isEdit = !this.isEdit;\n    this.commonService.updateUser(this.userObj).subscribe(()=>{\n      this.getLatestUser();\n\n    })\n    location.reload();\n  \n  }\n\n  form = new FormGroup({\n    name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    mobile: new FormControl('', [Validators.required, Validators.pattern(\"^((\\\\+91-?)|0)?[0-9]{10}$\")]),\n    password: new FormControl('', [Validators.required, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]),\n    introduction: new FormControl('', Validators.required)\n  });\n  \n  get f(){\n    return this.form.controls;\n  }\n\n }  ","<div class=\"container\">\n    <form #myForm=\"ngForm\" [formGroup]=\"form\">\n      <div class=\"form-group\">\n        <label for=\"name\">Full Name</label>\n        <input \n            formControlName=\"name\"\n            id=\"name\" \n            type=\"text\" \n            class=\"form-control\" [(ngModel)]=\"userObj.name\">\n        <div *ngIf=\"f.name.touched && f.name.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"f.name.errors.required\">Full Name is required.</div>\n            <div *ngIf=\"f.name.errors.minlength\">Full Name should be 3 character.</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"mobile\">Mobile Number</label>\n        <input \n            formControlName=\"mobile\"\n            id=\"mobile\" \n            type='text' \n            class=\"form-control\" [(ngModel)]=\"userObj.mobile\">\n        <div *ngIf=\"f.mobile.touched && f.mobile.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"f.mobile.errors.required\">Mobile Number is required.</div>\n            <div *ngIf=\"f.mobile.errors.pattern\">Please, enter valid Mobile Number.</div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email Address</label>\n        <input \n            formControlName=\"email\"\n            id=\"email\" \n            type=\"text\" \n            class=\"form-control\" [(ngModel)]=\"userObj.email\">\n        <div *ngIf=\"f.email.touched && f.email.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"f.email.errors.required\">Email is required.</div>\n            <div *ngIf=\"f.email.errors.email\">Please, enter valid email address.</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input \n            formControlName=\"password\"\n            id=\"password\" \n            type='password' \n            class=\"form-control\" [(ngModel)]=\"userObj.password\">\n        <div *ngIf=\"f.password.touched && f.password.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"f.password.errors.required\">Password is required.</div>\n            <div *ngIf=\"f.password.errors.pattern\">Please, enter valid Password. At least 8 characters in length(Lowercase letters,Uppercase letters,Numbers,Special characters</div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"introduction\">Introduction</label>\n        <textarea \n            formControlName=\"introduction\"\n            id=\"introduction\" \n            type=\"text\" \n            class=\"form-control\"  [(ngModel)]=\"userObj.introduction\">\n        </textarea>\n        <div *ngIf=\"f.introduction.touched && f.introduction.invalid\" class=\"alert alert-danger\">\n            <div *ngIf=\"f.introduction.errors.required\">Introduction is required.</div>\n        </div>\n    </div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=addUser(myForm.value) *ngIf=\"!isEdit\">Submit</button>\n      <button type=\"button\" class=\"btn btn-info\" (click)=updateUser(myForm.value) *ngIf=\"isEdit\">Update</button>\n    </form>\n    \n    <br>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\">Full Name</th>\n          <th scope=\"col\">Mobile Number</th>\n          <th scope=\"col\">Email Address</th>\n          <th scope=\"col\">Password</th>\n          <th scope=\"col\">Introduction</th>\n          <th scope=\"col\">Edit</th>\n          <th scope=\"col\">Delete</th>\n        </tr>\n      </thead>\n      <tbody>\n  <tr *ngFor=\"let user of allUser\">\n    <td>{{user.name}}</td>\n    <td>{{user.mobile}}</td>\n    <td>{{user.email}}</td>\n    <td>**************</td>\n    <td>{{user.introduction}}</td>\n    <td><button (click)=\"editUser(user)\" class=\"btn btn-warning\">Edit</button></td>\n    <td><button (click)=\"deleteUser(user)\" class=\"btn btn-danger\">Delete</button></td>\n  </tr>\n      </tbody>\n    </table>\n  </div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TestComponent } from './test/test.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TestComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(private _http:HttpClient) { }\n\n  createUser(user) {\n  return this._http.post(\"http://127.0.0.1:5000/users\", user);\n\n  }\n  getAllUser() {\n    return this._http.get(\"http://127.0.0.1:5000/users/all\");\n  }\n  updateUser(user) {\n    return this._http.put(\"http://127.0.0.1:5000/users?\" +user.id, user)\n    }\n\n  deleteUser(user) {\n    return this._http.delete(\"http://127.0.0.1:5000/users?id=\" +user.id)\n  }\n \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>test works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}